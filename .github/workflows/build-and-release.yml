name: Build and Release

on:
  push:
    branches:
      - master
    tags:
      - "v*"
    paths-ignore:
          - '**.md'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to bump to'
        required: false

env:
  KEYSTORE_FILE: ${{ secrets.KEYSTORE_FILE }}
  KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
  RELEASE_SIGN_KEY_ALIAS: ${{ secrets.RELEASE_SIGN_KEY_ALIAS }}
  RELEASE_SIGN_KEY_PASSWORD: ${{ secrets.RELEASE_SIGN_KEY_PASSWORD }}

jobs:
  generate_apk:
    name: Generate release artifacts
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup JDK
        uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: "11"
          cache: gradle
      - name: Checkout keystore repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          repository: pr0t3us/KeyStore
          token: ${{ secrets.KEYSTORE_ACCESS_TOKEN }}
          path: app/KeyStore
          ref: main
      - name: Set execution flag for gradlew
        run: chmod +x gradlew
      - name: Run tests and build release artifacts
        run: |
          ./gradlew test
          ./gradlew assembleRelease --stacktrace
          ./gradlew bundleRelease
      - name: Upload signed APK
        uses: actions/upload-artifact@v3
        with:
          name: app-release.apk
          path: app/build/outputs/apk/release/app-release.apk

      - name: Upload AAB Bundle
        uses: actions/upload-artifact@v3
        with:
          name: app-release.aab
          path: app/build/outputs/bundle/release/app-release.aab

  release_apk:
    name: Publish release artifacts
    needs: generate_apk
    runs-on: ubuntu-latest
    steps:
      - name: Download APK from build
        uses: actions/download-artifact@v3
      - name: Extract version from tag
        uses: battila7/get-version-action@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.event.repository.name }} '${{ steps.get_version.outputs.version }}'
      - name: Upload Release APK
        id: upload_release_asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: apk/app-release.apk
          asset_name: ${{ github.event.repository.name }}.apk
          asset_content_type: application/zip
