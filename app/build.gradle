plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.devtools.ksp'
    id 'dagger.hilt.android.plugin'
}

android {
    namespace 'com.androidpositive.ghubstore'
    compileSdk 34
    defaultConfig {
        applicationId "com.androidpositive.ghubstore"
        minSdk 23
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    signingConfigs {
        release {
            def keystoreProperties = new Properties()
            def keystorePropsFile = file("KeyStore/keystore.properties")

            if (keystorePropsFile.exists()) {
                file("KeyStore/keystore.properties").withInputStream { keystoreProperties.load(it) }
                storeFile file("$keystoreProperties.storeFile")
                storePassword "$keystoreProperties.storePassword"
                keyAlias "$keystoreProperties.keyAlias"
                keyPassword "$keystoreProperties.keyPassword"
            } else {
                storeFile file("KeyStore/" + System.getenv('KEYSTORE_FILE'))
                storePassword System.getenv('KEYSTORE_PASSWORD')
                keyAlias System.getenv('RELEASE_SIGN_KEY_ALIAS')
                keyPassword System.getenv('RELEASE_SIGN_KEY_PASSWORD')
            }
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.9'
    }
    packaging {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    def room_version = "2.6.1"

    implementation 'com.google.android.material:material:1.11.0'
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.7.7'
    implementation 'androidx.navigation:navigation-ui-ktx:2.7.7'
    implementation 'androidx.recyclerview:recyclerview:1.3.2'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.7.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.7.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.7.0'

    implementation 'androidx.activity:activity-compose:1.8.2'
    implementation platform('androidx.compose:compose-bom:2024.02.00')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation "androidx.compose.material3:material3:1.2.0"
    implementation "androidx.compose.material3:material3-window-size-class:1.2.0"
    implementation "androidx.compose.material3:material3-adaptive:1.0.0-alpha06"
    implementation "androidx.compose.material3:material3-adaptive-navigation-suite:1.0.0-alpha03"

    implementation 'androidx.navigation:navigation-compose:2.7.7'

    implementation 'org.kohsuke:github-api:1.318'
    implementation ('com.orhanobut:logger:2.2.0') {
        // Annotations are not used at runtime and can safely be excluded in order to disable the jetifier.
        exclude group: 'com.android.support', module: 'support-annotations'
    }

    implementation 'com.google.dagger:hilt-android:2.50'
    ksp 'com.google.dagger:hilt-compiler:2.50'
    implementation 'androidx.hilt:hilt-navigation-compose:1.1.0'
    implementation 'it.czerwinski.android.hilt:hilt-extensions:1.4.0'
    ksp 'it.czerwinski.android.hilt:hilt-processor-ksp:1.4.0'
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    ksp "androidx.room:room-compiler:$room_version"
    implementation 'org.mapstruct:mapstruct:1.5.3.Final'
    kapt 'org.mapstruct:mapstruct-processor:1.5.3.Final'

    implementation project(':infrastructure:viewmodel')

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'androidx.arch.core:core-testing:2.2.0'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.8.0'
    testImplementation 'org.mockito.kotlin:mockito-kotlin:5.2.1'

    testImplementation project(':infrastructure:test:livedata')

    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'

    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation platform('androidx.compose:compose-bom:2024.02.00')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
}
